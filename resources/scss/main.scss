@import url('https://fonts.googleapis.com/css?family=Open+Sans:500,600,700');
@import "burger.scss";
@import "peripheral.scss";
@import "header.scss";
@import "footer.scss";
@import "hero.scss";
@import "gallery.scss";
@import "mods.scss";
@import "hljs.scss";
@import "native-inputs.scss";
@import "blog.scss";

/* wanted to put in own file but wasnt compatible with live reload solution... */
:root { /* general vars */
  /* SIZES */
  --space:             1.2rem;
  --space-lg:          2.0rem;
  --space-sides:       var(--space-lg); /* inner horizontal margin */
  --space-edges:       var(--space-sides); /* size of outer edges  */
  --space-top:         2rem; /* top margin above header */
    --media-width-main: calc(100vw - 2 * var(--space-edges) - 2 * var(--line-width)); /* would it be context dependent or just use root 100% i guess uh */
  --banner-height:     600px;
  --logo-ratio:        0.4060; /* lol, 41.25 actual ratio, 40.6 works on chrome desktop, 40.0 on safari ios... */ /* just use img... */ /* or make logo look like i want in first place - needs higher-res or vector bounce anyways */
  /* --header-height:     calc(3 * var(--space)); */
  --header-height:     4.5rem; /* beware can be 3 or 6 in practice.... temp bc reading arbitrary css vars with calc is fiddly */
  --header-with-menu-height: 18rem; /* not truly dynamic bc of annoying sticky */
  --header-height-current: var(--header-height); /* will then be changed by js dep on whether menu open... */
  /* --link-offset:       calc(var(--space) + var(--header-with-menu-height)); */
  --link-offset:       calc( var(--header-with-menu-height));
  --menu-width-fraction: 0.75;

  --line-scale-factor: 0.5;
  --line-width:        2.0px; /* main design line/border width */ /* 0.125 normally 2px but nah ends up weird when font scales to like 1.67 and shize */
  --line-width-sm:     calc(1 / (1.5 + var(--line-scale-factor)) * var(--line-width)); /* main design line/border width */ /* 0.125 normally 2px but nah ends up weird when font scales to like 1.67 and shize */
  --line-width-md:     calc(((1 + var(--line-scale-factor)) / 2) * var(--line-width)); /* main design line/border width */ /* 0.125 normally 2px but nah ends up weird when font scales to like 1.67 and shize */
  --line-width-lg:     calc(1 / (1 + var(--line-scale-factor)) * var(--line-width)); /* main design line/border width */ /* 0.125 normally 2px but nah ends up weird when font scales to like 1.67 and shize */
  --line-width-vert:   1px; /* main design line/border width */ /* 0.125 normally 2px but nah ends up weird when font scales to like 1.67 and shize */
  --scale:             1.0; /* px line-width drifts when font scales so must compensate... better way? */
  
  --fiddle-multiplier: 0; /* was 3. works with line-width and header pixel dispair chrome+safari desktop. 2 would be the assumed correct tho... */
  --left-marker: calc(100% * ((1.0 - var(--menu-width-fraction)) / 2)
                      + var(--space) - (var(--fiddle-multiplier) * var(--line-width)));
  --right-marker: calc(100% - var(--left-marker) + var(--line-width)); /* makes sense right side needs one more unit since it has the right border... */
  --top-to-menu-height: calc(2 * var(--space-top) + 2em - (4 - var(--fiddle-multiplier)) * var(--line-width));
  
  --header-expand-time:  0.5s;
  --navigation-transition-time: 0.20s;


  --perspective:       100;
  --parallax:          50;
  --parallax-scale:    calc(1 + (var(--parallax) / var(--perspective)));
  --parallax-px:       calc(-1px * var(--parallax));
  
  --parallax-sm:       calc(0.50 * var(--parallax));
  --parallax-sm-scale: calc(1 + (var(--parallax-sm) / var(--perspective)));
  --parallax-sm-px:    calc(-1px * var(--parallax-sm));
  --parallax-squeeze-scale: calc(1 + (1 / var(--perspective) * var(--perspective)));
  --parallax-squeeze-px:    calc(-1px * var(--perspective));
  --parallax-squeeze-tf:    -1570%; /* fuck knows why */


  /* COLORS */
  --hue-1:             180; 
  --hue-2:               8;
  --hue-3:             192;
  --lum-dark-1:         9%;
  --lum-dark-2:        12%;
  --lum-dark-3:        18%;
  --lum-light-1:       calc(100% - var(--lum-dark-1));
  --lum-light-2:       calc(100% - var(--lum-dark-2));
  --lum-light-3:       calc(100% - var(--lum-dark-3));

  --light-1:           hsl(var(--hue-2), 20%, var(--lum-light-2));
  --light-2:           hsl(var(--hue-2), 7%, var(--lum-light-1));
  --light-text:        hsl(29, 35%, 86%);
  --light-3:           #ededed;


  --nav-accent: hsla(var(--hue-3), 40%, 20%, 0.35);
  --selection-accent: hsl(14, 75%, 80%, 0.7);
  --neutral-accent: #99aaee; /* link? */
  /* fixc bruv/box */
  --red       : #d18479;
  --red-2     : #af7370;
  --red-3     : #ea9a98;
  --green     : #b4b88d;
  --green-2   : #8b8c63;
  --green-3   : #ccdaa8;
  --yellow    : #dabd7a;
  --yellow-2  : #d0af80;
  --yellow-3  : #d9c894;
  --blue      : #7692ab;
  --blue-2    : #80a0b3;
  --blue-3    : #a6c0cd;
  --purple    : #bd979d;
  --purple-2  : #af8589;
  --purple-3  : #d9b7b7;
  --aqua      : #91b8a4;
  --aqua-2    : #9ab499;
  --aqua-3    : #B6D1B4;
  --orange    : #cca687;
  --orange-2  : #dba184;
  --orange-3  : #d9a58a;
  
  --dark-1:     hsl(var(--hue-1),  7%,  var(--lum-dark-1));
  --dark-2:     hsl(var(--hue-3),  7%,  var(--lum-dark-2));
  --dark-3:     #232323;

  --opacity-regular:  0.45;
  --opacity-faint:    0.25;
  --box-regular-color:    hsla(0, 0%, var(--lum-dark-1), var(--opacity-regular));
  --box-faint-color:      hsla(0, 0%, var(--lum-dark-1), var(--opacity-faint));
  --box-regular-color-flip: var(--box-regular-color); /* light mode always dark shadows */
  --box-faint-color-flip:   var(--box-faint-color);

  --gradient-bg-main: linear-gradient(-77deg,
                                      hsl(280, 20%, var(--lum-dark-1)),
                                      hsl(100, 11%, var(--lum-dark-1)));

  --fg-1:       var(--dark-1);
  --fg-2:       var(--dark-2);
  --fg-3:       var(--dark-3);
  --lum-fg-1:   var(--lum-dark-1);
  --lum-fg-2:   var(--lum-dark-2);
  --lum-fg-3:   var(--lum-dark-3);
  --bg-1:       var(--light-1);
  --bg-2:       var(--light-text);
  --bg-3:       var(--light-3);
  --lum-bg-3:   var(--lum-light-3);
  --lum-bg-1:   var(--lum-light-1);
  --lum-bg-2:   var(--lum-light-2);

}

@media (prefers-color-scheme: dark) {
  :root { /* OS has requested dark mode */
    --fg-1:     var(--light-1);
    /* --fg-2:     var(--light-text); */
    --fg-2:     var(--light-2);
    --fg-3:     var(--light-3);
    --lum-fg-1: var(--lum-light-1);
    --lum-fg-2: var(--lum-light-2);
    --lum-fg-3: var(--lum-light-3);
    --bg-1:     var(--dark-1);
    --bg-2:     var(--dark-2);
    --bg-3:     var(--dark-3);;
    --lum-bg-1: var(--lum-dark-1);
    --lum-bg-2: var(--lum-dark-2);
    --lum-bg-3: var(--lum-dark-3);
    --box-regular-color-flip: hsla(0, 0%, var(--lum-light-1), var(--opacity-regular));
    --box-faint-color-flip:   hsla(0, 0%, var(--lum-light-1), var(--opacity-faint));
  }
  #logo-top { /* invert then rotate hue to restore blue text */
    /* filter: invert() hue-rotate(180deg); */
  }
}
@media screen and (min-width: 800px) and (min-height: 800px) {
  :root {
    --space: 2.0rem;
    --space-lg: 3.0rem;
  }
}
@media screen and (min-width: 1100px) {
  .line { /* i guess x overflow only important on ios, so we hype here */
    width: 200%; /* extend out like damn */
  }
  :root {
    --space-edges: 10vw;
    /* --space-edges: calc(var(--space) + 10vw); */
  }
}
@media screen and (max-width: 600px),
       screen and (max-height: 600px) {
  :root {
    --space: 1.0rem;
    --space-lg: 1.5rem;
    --space-sides: var(--space); /* remember -sides based on the smaller num for mobile (since margins are more precious) */
    --space-edges: 0.8rem; /* perfectly makes room for macos scrollbar */

    --scale: 0.9;
    font-size: 0.90rem;
  }
}
@media not all and (min-resolution:.001dpcm), /* is safari */
       (prefers-reduced-motion: reduce) {     /* wants no parallax */
  :root {
    --perspective: 1; /* just to be sure */
    --parallax:    0;
    --parallax-squeeze-tf: 100%; /* fuck knows why */
  }
}
@media not all and (min-resolution:.001dpcm) { /* is safari */
  :root {
    --logo-ratio:        0.40; /* lol, 41.25 actual ratio, 40.6 works on chrome desktop, 40.0 on safari ios... */ /* just use img... */ /* or make logo look like i want in first place - needs higher-res or vector bounce anyways */
  }
  .stick-up { /* safari is being way irresponsible drawing img sticky layers.. */
    /* position: relative; */
    /* top: initial; */
  }
}
@supports (-webkit-overflow-scrolling: touch) { /* iOS devices */
  body { /* prevent insane bumping of p font size in landscape and more */
    text-size-adjust: 100%; -webkit-text-size-adjust: 100%;
  }
}
@media only screen and (-webkit-device-pixel-ratio: 3) {
  :root { /* *im thinking this is what it's about. 3 vs 2 pixels per pixel */
    --fiddle-multiplier: 1; /* makes iphone x line up with current formulas/offsets */
  }
}
@media only screen and (min-device-width : 375px) and (max-device-width : 812px) and (-webkit-device-pixel-ratio : 3) {
  /* iphone x */
} @media only screen and (min-device-width : 375px) and (max-device-width : 667px) {
  /* iphone 6-8. i mean not really tho could be loads?? */
} @media only screen and (min-device-width : 414px) and (max-device-width : 736px) {
  /* 6-8 plus */
}

@media screen and (max-width: 400px) {
  :root {
    font-size: 0.80rem;
    --space-sides: calc(0.5 * var(--space)); /* remember -sides based on the smaller num for mobile (since margins are more precious) */
    --space-edges: calc(0.5 * var(--space));
  }
  #top-banner { /* need a better solution for ensuring doesnt overflow... like a tallet image? */
    padding-top: 0;
  }
  /* .caption-inset  { /1* ok whatever no captions on iphone then *1/ */
  /*   visibility: hidden; */
  /*   display: none; */
  /*   opacity: 0; */
  /* } */
}

li {
  list-style: none;
}


/* #theme-toggle:checked ~ .themable { */
/* #theme-toggle:checked ~ body { */
/* #theme-toggle:checked ~ main { */
/*   /1* ok so can select main but not body OUCH. *1/ */
/* /1* .themable { *1/ */
/*     --bg-1:     var(--dark-1); */
/*     --bg-2:   var(--dark-2); */
/*     --fg-1:     var(--light-1); */
/*     --fg-2:   var(--light-text); */
/*     --box-regular-color-flip: hsla(0, 0%, var(--lum-light-1), var(--opacity-regular)); */
/*     --box-faint-color-flip:   hsla(0, 0%, var(--lum-light-1), var(--opacity-faint)); */
/*     color: red; */
/* } */
/* #theme-toggle:not(:checked) ~ main { */
/*   --bg-1:      var(--light-1); */
/*   --bg-2:    var(--light-text); */
/*   --fg-1:      var(--dark-1); */
/*   --fg-2:    var(--dark-2); */
/*   --box-regular-color-flip: var(--box-regular-color); /1* light mode always dark shadows *1/ */
/*   --box-faint-color-flip:   var(--box-faint-color); */
/*     color: blue; */
/* } */

* {
  box-sizing: border-box;
  margin:  0;
  padding: 0;
}

:target {
  /* pseudo-el representing a target (link, id/el)... */
  /* does not appear to do the trick tho. wait isnt it :: or hmm nope would be if was like *::target? */
  /* html, body does seem to semi-work so whatever */
  scroll-padding-top: var(--header-height-current);
} /* header-height or header-with-menu-height... */
/* doesnt seem to work though, try putting in html, body... */

html, body {
  /* scroll-margin-block-start: calc(1em + var(--header-height-current)); */
  scroll-padding-top: var(--header-height-current);
  /* scroll-padding-top: calc(1em + var(--header-with-menu-height)); */
}
html {
  height: 100%;
  overflow-x: hidden; /* gotta be on both or doesnt work on iphone hmm */
  scroll-behavior: smooth; /* makes in-page links scroll to target beautifully in chrome */
  /* overscroll-behavior-y: none; /1* actually works in chrome, stops from overscroll. BUT makes scrolling and esp sticky jittery it seems? *1/ */
}

body {
  font-family: 'Open Sans', sans-serif;
  color: var(--fg-1);
  background-color: var(--bg-1);
  width: calc(100% - 2 * var(--space-edges));
  max-width: 1000px; /*should be conn to var no*/
  margin: auto;

  /* no overflow hidden on body = iphone can scroll sideways. on body works but sticky header breaks */
  /* -webkit-overflow-x: hidden; nope... no work */
  /* overflow-x: hidden; /1* gotta be on both or doesnt work on iphone hmm *1/ */
  /* -webkit-overflow-scrolling: touch; */
}


@supports(scroll-margin-top: 0px) { /* compensate for our sticky header. */
  .link-anchor { scroll-margin-top: var(--header-height-current); } }
@supports not (scroll-margin-top: 0px) {
  .link-anchor::before { /* have to compensate due to our sticky header. */
    display: block;      /* on about section not working was due to overflow: auto clearfix... */
    content: " ";        /* also various safari vs chrome diff in behavior */
    margin-top: calc(-1.0 * var(--header-height-current));
    height: calc(1.0 * var(--header-height-current));
    visibility: hidden;
    pointer-events: none;
    z-index: -1;
  }
}

/* TODO: line border cross pattern for eg images, in same way as site main, connecting to main borders... */
/* together with similar for topnav and feels "almost" proper design language ish */
/* could also run along down connecting to next section... */
.line { /* i guess x overflow only important on ios, so we hype -edges by media query */
  width: calc(var(--space-edges) + 100%); /* extend out one margin */
  background-color: var(--fg-1);
  height: var(--line-width);
}
.line-sm {
  --line-width: var(--line-width-sm);
  /* height: var(--line-width-sm); */
  /* nice sass or w/e to have a bunch with var-as like? */
}

.line.line-header {
  position: sticky; /* starts between header and main, turns into demarcation */
  z-index: 100;
  top: var(--header-height); /* not -current since being overridden in header.css then */
  transition: top var(--header-expand-time) ease 0.0s;
  margin-top: var(--space-top); /* space before sticky starts */
}
.line.line-footer {
  position: absolute;
  top: 0; /* if attach at top of footer instead of bottom of main */
  right: 0; /* extend on left instead of right width already good */
  z-index: 100;
}
.line-left  { border-left:  var(--line-width-vert) solid; }
.line-right { border-right: var(--line-width-vert) solid; }
.line-left-sm  { border-left:  var(--line-width-vert) solid; }
.line-right-sm { border-right: var(--line-width-vert) solid; }
.lined-container {
  position: relative; /* need to be able to attach lines around */
  border: var(--line-width) solid;
}


a {
  color: var(--fg-2);
  text-decoration: none;
}
a:focus, a:hover, a:active {
  transform: scale(1.12);
  filter: brightness(125%) drop-shadow(0.2rem 0.2rem 0.1rem var(--bg-1));
  font-weight: 600;
}

main { /* dunno purpose of why I choose .main-content... */
  width: 100%;
  /* max-width: 1000px; /*should be conn to var no */
}

.main-content {
  border-top: var(--line-width) solid; /* should make configurable. off looks p nice on main page */
  border-bottom: var(--line-width) solid; /* should make configurable. off looks p nice on main page */
  border-left:  var(--line-width-vert) solid; /* should make configurable. off looks p nice on main page */
  border-right: var(--line-width-vert) solid; /* should make configurable. off looks p nice on main page */
  background: var(--gradient-bg-main);
  margin-top: var(--space-lg);
  padding-bottom: calc(3.5 * var(--space-lg)); /* XXX actually, footer height... */
  position: relative;
}
pre {
  overflow: scroll;
  /* max-height: 6em; */
  /* white-space: pre-wrap; */
  background-color: var(--bg-2);
  color: var(--fg-2);
  padding: 1.25em;
  margin: 1.00em calc(-0.5 * var(--space));
  border-top: var(--line-width-sm) solid;
}


p > code { /* single-word vars etc */
  background-color: var(--bg-2);
  color: var(--fg-3);
  padding: 0.4em 0.3em;
}
/* DOCS SECTION */
section.docs a {
  color: var(--blue-2);
  font-style: italic;
}
section.docs p.title {
  border-top: var(--line-width-sm) solid currentColor;
  /* background-color: var(--bg-2); */
  background: linear-gradient(to right, var(--bg-2) 85%, var(--bg-1));
  margin: 1.7em 0.5em 1em;
  font-size: 1.4em;
  font-weight: 600;
  width: 50%;
}
section.docs .bs-callout {
  margin-top: 2rem;
  padding: var(--space);
  background-color: var(--bg-2);
}
section.docs .bs-callout h4 {
  font-size: 1.1em;
  margin-bottom: 0.75em;
}


.column {
  margin: var(--space);
  text-align: left;
}



section { /* one main section (img + header + piece of content) */
  max-width: 100%;
  flex: 1 1 auto;
  position: relative;
  justify-content: center;
  align-items: middle;
  padding:   var(--space-lg) var(--space-lg); /* for padding-less main: */
  border-top: var(--line-width) solid;
}
section > h1, .jumbo > h1 {
  text-align: center;
  padding-bottom: var(--space);
  padding-top:    var(--space);
}
.main-content > section:first-of-type { /* top section: no upper border */
  border-top: 0;
}
.main-content > section:last-of-type { /* last section, no bottom border */
  margin-bottom: 0;
  z-index: 30;
}

h1, h2, h3, h4, h5, h6 { font-weight: normal; }

section h1, article h1 { font-size: 2rem; } /* restore proper h1 from 1.5 bs */
.h0 { font-size: 2.5rem; }
.h0-responsive { font-size: calc(2.5rem + 8vw); } /* size based on viewport, with sensible min */
.h-responsive  { font-size: calc(1.5rem + 3vw); }
@supports(font-size: min(0px)) { /* can additionally set a maximum... */
  .h0-responsive { font-size: #{'min(6rem,   2.5rem + 8vw)'}; }
  .h-responsive {  font-size: #{'min(3.5rem, 1.5rem + 3vw)'}; }
}

.buttons {
  display: flex;
  justify-content: space-evenly;
}
button {
  padding: calc(0.5 * var(--space)) calc(0.5 * var(--space-lg));
  margin: calc(0.5 * var(--space)) calc(0.5 * var(--space-lg));
  background: hsla(var(--hue-1), 7%, var(--lum-bg-2), 0.35);
  color: var(--fg-2);
  border: var(--line-width) solid;
  border-radius: 0.15rem;
  position: relative;
}
button label {
  position: relative;
  font-size: 1.2rem;
  z-index: 2;
}
button:hover .blur-bg, button:active .blur-bg,
.blur-bg:hover, .blur-bg:active {
  opacity: 1.0;
}

input {
  margin: 0 0.25em; /* just for checkboxes... */
}

.media-container {
  position: relative;
  display: flex;
  flex-flow: column;
  align-items: center; /* align-items instead of justify-content because flow by column */
  justify-content: center;
  text-align: center;
}
.media-container p { /* img/video caption... */
  font-size: 0.85em; /* small captions */
  margin-top: 0.3em;
  width: var(--media-width-main);
  text-align: left;
}
video {
  height: auto;
}
.media {
  width: 100%;
  max-width: 700px;
  margin: var(--space) calc(0.5 * var(--space)) 0.2rem calc(0.5 * var(--space));
  user-select: none;
}
.image-sm {
  width: calc(0.5 * var(--media-width-main));
  max-height: 300px;
  object-fit: cover; /* since we're setting max-height we must also ensure zooms instead of stretching */
}
.image-flex {
  flex: 1 0 auto;
  max-width: 200px; /* tho then should actually INCREASE on small screens when 1col... */
}
.image-inset {
  margin-top: 0;
  margin-left: 0;
  border-radius: 0.15rem;
}
.fullwide { /* expand div back to full width of main despite regular paddings/margins */
  /* guess should work to only fuck w margin+width directly not left etc? */
  /* i guess this should be for only when breaking out of margin bs */
  /* not the other bg fullwide stuff... */
  margin: 0;
  padding: 0;
  position: relative;
  left: 0;
  /* left:  calc(0% - 0.5 * var(--space-sides)); */
  width: #{'min(100%, var(--media-width-main))'};
}
.fullwide > .media {
  max-width: unset;
  margin: 0;
}
.widescreen-safe { /* ensure bottom doesnt run out of 16:9 bg media on (ironically) _thin_ screens */
  height: calc(1.20 * var(--header-with-menu-height)); /* just, some nice tall enough height - max-height will save us anyways */
  max-height: calc((100vw - 2 * var(--space-edges)) / (16/9));
}

.media-as-bg {
  position: absolute;
  left: 0;
  width: 100%;
  max-width: unset;
  object-fit: cover;
  margin: 0;
}
.section-with-media-bg-wrapper { /* like section-bg-wrapper but NOT using background for img/video */
  position: relative;
  width: 100%;
  overflow: hidden;
  /* border-top: var(--line-width) solid; */
}


.bg-static-section {
  position: relative;
  overflow-y: hidden;
}


.component-failed { /* DEV: react error boundary triggered */
  padding: var(--space);
  color: var(--red-1);
  width: 100%;
}
.component-failed > * { /* DEV: react error boundary triggered */
  margin: var(--space);
}
.loading-spinner {
  opacity: 0.8;
  transition: all 0.5s;
  position: relative;
}

.hud {
  position: fixed;
  z-index: 100;
  bottom: calc(2 * var(--space-lg)); /* ;actually, footer, if sticky... */
  right: 1.5rem;
}
.hud-message {
  margin: var(--space);
  padding: 0.3rem 0.7rem;
  border: 1px solid rgba(150, 150, 150, 0.3);
  opacity: 0.8;
}

.message.error   { color: var(--message-error); }
.message.warning { color: var(--message-warning); }
/* .message.info    { color: var(--message-info); color: #222; } */

.hud-message.error   { background: #f55; }
.hud-message.warning { background: #fa5; }
.hud-message.info    { background: #dcd; color: #222; }

.hud-modal-main {
  padding: 0.75rem 2rem;
}
.hud-modal-main > * {
  padding: 0.75rem;
}

.stick-up { /* make sticky just below header */
  position: sticky;
  top: var(--header-height-current);
}

#section-services {
  z-index: 6;
}
#services {
  position: sticky;
  z-index: 12;
  top: 0;
  margin-bottom: var(--space-lg);
}

#intro {
  position: relative;
  max-height: var(--media-width-main);
}
#intro p {
  padding: 0 var(--space-lg);
}

#intro-end { /* lbp pic "YOU" */
  height: calc(100vw - 2 * var(--space-edges));
}
#interlude-2 {
  z-index: 7;
}
#interlude-3 { /* portfolio */
  z-index: 29;
}
#portfolio { /* portfolio */
  z-index: 30;
}

#about-intro {
  --height: calc(6 * var(--space-lg));
  max-height: var(--height);
  z-index: 13;
  top: var(--header-height-current);
  /* transform-origin: 50% -1570%; /1* figure out genericable bs lol *1/ */
}
#about-story {
  position: relative;
  z-index: 14;
}
#headshot {
  width: 20%;
  max-width: 150px;
}
#byline > img {
  border-radius: 0.5em;
  border: 1px solid;
}
#multimeter {
  width: 30%;
  min-width: 150px;
  max-width: 300px;
}

#building-tools {
  z-index: 29;
}

/* FLOAT STUFF */
.caption-inset { /* caption overlaying media */
  margin: 0.8em;
  font-size: 0.65rem; /* weird ass size when iphone landscape, and webkit-text-size-adjust doesnt seem to help... */
  opacity: 0.65;
  position: absolute;
  z-index: 40;
}
.caption-inset.right {
  right: 0;
  text-align: right;
}
.caption-inset.left   { left:   0; }
.caption-inset.top    { top:    0; }
.caption-inset.bottom { bottom: 0; }

.float-with-caption {
  margin: var(--space) 0;
}
.float-with-caption:first-of-type { /* keep top of first inset level with top of text. */
  margin-top: 0;
}
.float-with-caption > .media {
  margin: 0;
  width: 100%; /* and then set on parent div */
}
.float-with-caption.left {
  float: left;
  margin-right: calc(1.0 * var(--space-lg)); /* using reg space becomes bit wrong when very slim... too tight. */
}
.float-with-caption.right {
  float: right;
  margin-left: calc(1.0 * var(--space-lg));
}
figcaption, .float-with-caption {
  font-size: 0.8rem;
}

.float-wrapper { overflow: auto; } /* clearfix */
/* .float-wrapper::after { */
/*   content: ""; */
/*   clear: both; */
/*   display: table; */
/* } */


.md-icon {
  width:  var(--space-lg);
  height: var(--space-lg);
}
.sm-icon {
  width:  var(--space);
  height: var(--space);
}
h3::first-letter { /* nice looking fancy. why isnt applying within category?? */
  font-size: 120%;
  filter: brightness(110%);
}


#categories { /* List of services offered */
  /* FAILURE: can't get flexbox working like i want with nice alignment and also word-wrap and blabla */
  /* but this is maybe good enough? only works sorta ok with 1/2/3 cols because of specific content so  guess point is to use breakpoints and table or better yet grid */
  display: flex;
  /* display: grid; /1* fuck with this *1/ */
  justify-content: space-evenly;
  align-content: bottom;
  text-align: center;
  flex-wrap: wrap;
}

#categories > ul {
  flex: 0 1 auto;
  margin:  calc(0.5 * var(--space));
  padding: calc(1.0 * var(--space));
  border-radius: 0.20rem;
  /* border: var(--line-width-sm) solid var(--yellow-2); */
  /* border: var(--line-width-sm) solid var(--green-2); */
  border: var(--line-width-sm) solid var(--bg-1);
  
  min-width: 35%; /* ensure only two per line */
    /* min-width: 45%; /1* ensure no awkward two on one row, one on rest... not exactly universal solution tho :/ *1/ */
    /* /1* oh and doesnt work for like if font small enough that two fit nicely gah *1/ /1* easy enough with js tho.. *1/ */
    /* /1* max-width: 100%; *1/ */
  /* max-width: 55%; */
  text-align: left;
  font-size: 1.1rem;
  backdrop-filter: blur(2.5px);
  -webkit-backdrop-filter: blur(2.5px);
  background: hsla(var(--hue-3), 70%, var(--lum-fg-2), 0.06);
  transition: 0.3s;
  /* nah doesnt suit page/design. but effect is fine */
}
#categories ul:hover {
  border-radius: 0.80rem;
  /* transform: skew(-2deg); */
  /* width: 110%; */
  transform: translateZ(20deg);
}
@media screen and (max-width: 400px) {
  #categories > ul {
    /* min-width: 45%; /1* ensure no awkward two on one row, one on rest... not exactly universal solution tho :/ *1/ */
    /* /1* oh and doesnt work for like if font small enough that two fit nicely gah *1/ /1* easy enough with js tho.. *1/ */
    /* /1* max-width: 100%; *1/ */
    /* max-width: 55%; */
  }
}
@media screen and (min-width: 500px) {
  #categories > ul {
    font-size: calc(1.0rem + 0.5vw);
  }
}
@media screen and (min-width: 800px) {
  #categories > ul {
    font-size: calc(1.1rem + 0.3vw);
  }
}
#categories > ul > * {
  margin: 0.1em 0.1em 0.1em;
}
#categories > ul > li:first-of-type  {
  white-space: nowrap;
  margin-bottom: calc(0.5 * var(--space));
}
#categories > ul > li:first-of-type ~ li { /* suddenly started making the icons... weird inner shadow. so skip the header. */
  text-shadow: 1px 1px 2px var(--bg-1);
}
#categories > ul i {
  font-size: 1.4em;
  background: linear-gradient(-30deg, hsla(20, 35%, 70%, 0.80), var(--fg-2));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
#categories > ul h3 {
  display: inline;
  position: relative;
}
#categories > ul h3::after { /* shitty underline didnt end up too hot hmm */
  content: "";
  height: 2.5px;
  background: linear-gradient(to right, hsla(8, 30%, 78%, 0.7), var(--fg-2) 130%);
  width: 100%;
  transform: skew(-20deg);
  position: absolute;
  bottom: -1px;
  left: -2px;
  z-index: -1;
}
#categories > ul li {
  /* margin-left: calc(2 * var(--space)); */
  font-size: 0.80em;
  text-align: left;
  /* list-style-type: '_'; */
  /* text-shadow: 1px 1px 2px var(--bg-1); */
}
