.experiments {
  // padding-bottom: 0 !important;
  z-index: 30;
}

.tabs-container {
  background: var(--bg-3);

  > li {
    background: var(--bg-1);
  }
}

.parallax-ui {
  // position: fixed;
  position: sticky;
  top: var(--header-height-current);
  background: rgba(30, 30, 45, 0.8);
  z-index: 10;
  width: 100%;
  padding: 0.5rem;
}

/* adapted from keithclark demo */
.parallax { /* wrapper */
  // height: 100vh;
  height: calc(100vh - var(--header-height-current) - var(--footer-height));
  overflow-y: auto;
  overflow-x: hidden;
  /* might be best have main content as scroller anyways? */
  /* just put auto on larger "section of sections" then */
  /* because scrolling auto continues once down so */
  /* important thing is fixed height and overflow. */
  perspective: 300px; /* perspective wot dun it. hence put such on main */
  font-size: 200%;
}

.parallax__group {
  position: relative;
  min-height: 30vh;
  transform-style: preserve-3d;
}

.parallax__layer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  // border: var(--line-width) solid;
  opacity: 0.7;
  display: flex;
  align-items: center;
}

.parallax__layer--fore {
  transform: translateZ(75px) scale(.75);
  z-index: 1;
  background-color: hsl(284,30%,40%);
  background-image: url('../img/tolgrav.png');
}
.parallax__layer--base {
  z-index: 4;
  background: hsla(102,30%,40%, 0.5);
  // background-image: url('../img/live-session-small.jpg');
}
.parallax__layer--back {
  transform: translateZ(-150px) scale(1.5);
  z-index: 3;
  background: hsl(23,30%,40%);
  background-image: url('../img/vim-code-small.jpg');
}
.parallax__layer--deep {
  transform: translateZ(-300px) scale(2);
  z-index: 2;
  background: hsl(184,30%,40%);
  background-image: url('../img/crowd-lbp.jpg');
}


/* Debugger styles - used to show the effect
--------------------------------------------- */
.debug-on .parallax__group {
  transform: translate3d(200px, 0, -400px) rotateY(30deg);
}
.debug-on .parallax__layer {
  border: var(--line-width) solid;
  // opacity: 0.8;
}
.parallax__group {
  transition: transform 0.5s;
}

/* style the groups
--------------------------------------------- */
#group1 { z-index: 5; /* slide over group 2 */ }
#group2 { z-index: 3; /* slide under groups 1 and 3 */ }
#group3 { z-index: 4; /* slide over group 2 and 4 */ }
#group4 { z-index: 2; /* slide under group 3 and 5 */ }
#group5 { z-index: 3; /* slide over group 4 and 6 */ }
#group6 { z-index: 2; /* slide under group 5 and 7 */ }
#group7 { z-index: 3; /* slide over group 6 */ }



// react transition group test...
.elem-enter {
  opacity: 0;
}
.elem-enter-active {
  opacity: 1;
  transition: opacity 800ms;
}
.elem-exit {
  opacity: 1;
}
.elem-exit-active {
  opacity: 0;
  transition: opacity 800ms;
}
// initial mount of parent component children get this
// when prop transitionAppear true
.elem-appear {
  opacity: 0.01;
}
.elem-appear.elem-appear-active {
  opacity: 1;
  transition: opacity .5s ease-in;
}


/* DOCS SECTION */
section.docs {
  a {
    color: var(--blue-2);
    font-style: italic;
  }
  
  p.title {
    border-top: var(--line-width-sm) solid currentColor;
    background: linear-gradient(to right, var(--bg-2) 85%, var(--bg-1));
    margin: 1.7em 0.5em 1em;
    font-size: 1.4em;
    font-weight: 600;
    width: 50%;
  }

  .bs-callout {
    margin-top: 2rem;
    padding: var(--space);
    background-color: var(--bg-2);

    h4 {
      font-size: 1.1em;
      margin-bottom: 0.75em;
    }
  }
}


.leaflet-container {
  width: 100%;
  // height: 100%; // needed for some reason or it gets 0 height...
  height: 18em; // needed for some reason or it gets 0 height...
  filter: invert(0.95) hue-rotate(170deg);
  .leaflet-tile {
    // transform: translate3d(0, 0, 0) !important;

  }
}
